name: Docker Image CI
on: [push]
jobs:
#  amd64:
#    runs-on: ubuntu-18.04
#    env:
#      TAG: latest
#    steps:
#    - uses: actions/checkout@v1
#    - name: Build amd64
#      run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:amd64-${TAG} -f Dockerfile.amd64 .
  arm32v7:
    runs-on: ubuntu-18.04
    env:
      TAG: latest
    steps:
      - uses: actions/checkout@v1
        id: arm32v7
      - name: Build arm32v7
        run: |
          sudo apt-get -qy update
          sudo apt-get -qy --no-install-recommends install qemu-user-static binfmt-support
          sudo update-binfmts --enable qemu-arm
          sudo update-binfmts --display qemu-arm
          sudo mount binfmt_misc -t binfmt_misc /proc/sys/fs/binfmt_misc
          sudo echo ':arm:M::\x7fELF\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x00\x28\x00:\xff\xff\xff\xff\xff\xff\xff\x00\xff\xff\xff\xff\xff\xff\xff\xff\xfe\xff\xff\xff:/usr/bin/qemu-arm-static:' > /proc/sys/fs/binfmt_misc/register
          cp /usr/bin/qemu-arm-static ./root
          cp /usr/bin/qemu-aarch64-static ./root
          docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm32v7-${TAG} -f Dockerfile.arm32v7 .
#  arm64v8:
#    runs-on: ubuntu-18.04
#    env:
#      TAG: latest
#    steps:
#      - uses: actions/checkout@v1
#      - uses: uraimo/run-on-arch-action@v1.0.6
#        id: arm64v8
#        with:
#          architecture: aarch64
#          distribution: ubuntu18.04
#          run: |
#            echo ::set-output name=id::$(docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm64v8-${TAG} -f Dockerfile.amd64 .)
#      - name: Build arm64v8
#        run: |
#          echo "Container ID is ${{ steps.arm32v7.outputs.id }}"

name: Docker Image CI
on: [push]
jobs:
  env:
    TAG: latest
  amd64:
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v1
    - name: Build amd64
      run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:amd64-${TAG} -f Dockerfile.amd64 .
  arm32v7:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: uraimo/run-on-arch-action@v1.0.6
        id: arm32v7
        with:
          architecture: armv7
          distribution: ubuntu18.04
          run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm32v7-${TAG} -f Dockerfile.amd64 .
      - name: Build arm32v7
  arm64v8:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v1
      - uses: uraimo/run-on-arch-action@v1.0.6
        id: arm64v8
        with:
          architecture: aarch64
          distribution: ubuntu18.04
          run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm64v8-${TAG} -f Dockerfile.amd64 .
      - name: Build arm64v8

    #- name: Build arm32v7
    #  run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm32v7-${TAG} -f Dockerfile.arm32v7 .
    #- name: Build arm64v8
    #  run: docker build --compress --no-cache --force-rm -t qoopido/easyepg.minimal:arm64v8-${TAG} -f Dockerfile.arm64v8 .
    # - name: Build the Docker image
    # run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

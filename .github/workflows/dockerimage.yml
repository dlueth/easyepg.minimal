name: Docker Image CI
on: [push]
env:
  TAG: latest
  DEBIAN_FRONTEND: noninteractive
jobs:
  amd64:
    name: amd64
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Preparation
        run: |
          # update packages & install requirements
            sudo apt-get -qy update
            sudo apt-get -qy install moreutils
          # enable Dockers experimental features
            if [[ -z "${DOCKER_CONFIG}" ]]; then
              export DOCKER_CONFIG="/home/runner/work/_temp/docker.$(date +%s)"
              mkdir -p ${DOCKER_CONFIG}
              touch ${DOCKER_CONFIG}/config.json
            fi

            sudo sh -c "jq -s 'add' ${DOCKER_CONFIG}/config.json ./.docker/config.json | sponge ${DOCKER_CONFIG}/config.json"
            sudo sh -c "jq . ./.docker/daemon.json | sponge /etc/docker/daemon.json"
            sudo service docker restart
      - name: Build
        run: |
          docker build --compress --no-cache --force-rm --squash -t qoopido/easyepg.minimal:${TAG}-amd64 -f Dockerfile.amd64 .
      - name: Push
        run: |
          echo "Push amd64"
  arm32v7:
    name: arm32v7
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Preparation
        run: |
          # update packages & install requirements
            sudo apt-get -qy update
            sudo apt-get -qy install qemu-user-static binfmt-support moreutils
          # copy qemu for use via Dockerfile
            cp /usr/bin/qemu-arm-static ./root
          # enable Dockers experimental features
            if [[ -z "${DOCKER_CONFIG}" ]]; then
              export DOCKER_CONFIG="/home/runner/work/_temp/docker.$(date +%s)"
              mkdir -p ${DOCKER_CONFIG}
              touch ${DOCKER_CONFIG}/config.json
            fi

            sudo sh -c "jq -s 'add' ${DOCKER_CONFIG}/config.json ./.docker/config.json | sponge ${DOCKER_CONFIG}/config.json"
            sudo sh -c "jq . ./.docker/daemon.json | sponge /etc/docker/daemon.json"
            sudo service docker restart
      - name: Build
        run: |
          docker build --compress --no-cache --force-rm --squash -t qoopido/easyepg.minimal:${TAG}-arm32v7 -f Dockerfile.arm32v7 .
      - name: Push
        run: |
          echo "Push arm32v7"
  arm64v8:
    name: arm64v8
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Preparation
        run: |
          # update packages & install requirements
            sudo apt-get -qy update
            sudo apt-get -qy install qemu-user-static binfmt-support moreutils
          # copy qemu for use via Dockerfile
            cp /usr/bin/qemu-aarch64-static ./root
          # enable Dockers experimental features
            if [[ -z "${DOCKER_CONFIG}" ]]; then
              export DOCKER_CONFIG="/home/runner/work/_temp/docker.$(date +%s)"
              mkdir -p ${DOCKER_CONFIG}
              touch ${DOCKER_CONFIG}/config.json
            fi

            sudo sh -c "jq -s 'add' ${DOCKER_CONFIG}/config.json ./.docker/config.json | sponge ${DOCKER_CONFIG}/config.json"
            sudo sh -c "jq . ./.docker/daemon.json | sponge /etc/docker/daemon.json"
            sudo service docker restart
      - name: Build
        run: |
          docker build --compress --no-cache --force-rm --squash -t qoopido/easyepg.minimal:${TAG}-arm64v8 -f Dockerfile.arm64v8 .
      - name: Push
        run: |
          echo "Push arm64v8"
  manifest:
    name: manifest
    needs: [amd64, arm32v7, arm64v8]
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Login
        uses: azure/docker-login@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Preparation
        run: |
          # update packages & install requirements
            sudo apt-get -qy update
            sudo apt-get -qy install moreutils
          # enable Dockers experimental features
            if [[ -z "${DOCKER_CONFIG}" ]]; then
              export DOCKER_CONFIG="/home/runner/work/_temp/docker.$(date +%s)"
              mkdir -p ${DOCKER_CONFIG}
              touch ${DOCKER_CONFIG}/config.json
            fi

            sudo sh -c "jq -s 'add' ${DOCKER_CONFIG}/config.json ./.docker/config.json | sponge ${DOCKER_CONFIG}/config.json"
            sudo sh -c "jq . ./.docker/daemon.json | sponge /etc/docker/daemon.json"
            sudo service docker restart
      - name: Build
        run: |
          docker manifest create qoopido/easyepg.minimal:${TAG} qoopido/easyepg.minimal:${TAG}-amd64 qoopido/easyepg.minimal:${TAG}-arm32v7 qoopido/easyepg.minimal:${TAG}-arm64v8
          docker manifest annotate qoopido/easyepg.minimal:${TAG} qoopido/easyepg.minimal:${TAG}-arm32v7 --os linux --arch arm
          docker manifest annotate qoopido/easyepg.minimal:${TAG} qoopido/easyepg.minimal:${TAG}-arm64v8 --os linux --arch arm64 --variant armv8
          # echo ${DOCKER_HUB_TOKEN} | docker login -u ${DOCKER_HUB_USER} --password-stdin
          # docker manifest push qoopido/easyepg.minimal:${TAG} --purge
      - name: Push
        run: |
          echo "Push manifest"
